{"version":3,"file":"get_courses.min.js","sources":["../src/get_courses.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n//\n// @package     local_copygroups\n// @copyright   2024 CBlue SPRL\n// @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n\nimport Ajax from 'core/ajax';\n\n/**\n * Load the list of groups where the users is enrolled\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {String} query The query string.\n * @param {Function} callback A callback function receiving an array of results.\n * @param {Function} failure A function to call in case of failure, receiving the error message.\n */\nexport async function transport(selector, query, callback, failure) {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    const request = {\n        methodname: 'local_copygroups_get_courses',\n        args: {\n            query: query,\n            course_id: urlParams.get('courseid') ?? null\n        }\n    };\n\n    try {\n        const response = await Ajax.call([request])[0];\n        callback(response);\n    } catch(e) {\n        failure(e);\n    }\n}\n\n/**\n * Process the results for auto complete elements.\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {Array} results An array or results returned by {@see transport()}.\n * @return {Array} New array of the selector options.\n */\nexport function processResults(selector, results) {\n    return results.map(result => ({value: result.id, label: result.shortname}));\n}"],"names":["selector","results","map","result","value","id","label","shortname","query","callback","failure","urlParams","URLSearchParams","window","location","search","request","methodname","args","course_id","get","response","Ajax","call","e"],"mappings":";;yFAuD+BA,SAAUC,gBAC9BA,QAAQC,KAAIC,UAAYC,MAAOD,OAAOE,GAAIC,MAAOH,OAAOI,iDA3BnCP,SAAUQ,MAAOC,SAAUC,kCACjDC,UAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAEhDC,QAAU,CACZC,WAAY,+BACZC,KAAM,CACFV,MAAOA,MACPW,iCAAWR,UAAUS,IAAI,qDAAe,iBAKtCC,eAAiBC,cAAKC,KAAK,CAACP,UAAU,GAC5CP,SAASY,UACX,MAAMG,GACJd,QAAQc"}